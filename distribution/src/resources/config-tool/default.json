{
  "server.enableMTOM": false,
  "server.enableSwA": false,
  "server.userAgent": "WSO2 Micro Integrator 1.0.0",
  "server.serverDetails": "WSO2 Micro Integrator 1.0.0",
  "server.synapse_config_file_path": "repository/deployment/server/synapse-configs",
  "server.hide_admin_service_wsdl": true,

  "encryption.internal_crypto_provider": "org.wso2.micro.integrator.crypto.provider.KeyStoreBasedInternalCryptoProvider",
  "encryption.key": "SECRET_KEY",

  "synapse_properties.'synapse.threads.core'": "20",
  "synapse_properties.'synapse.threads.max'": "100",
  "synapse_properties.'synapse.global_timeout_interval'": "120000",
  "synapse_properties.'synapse.commons.json.preserve.namespace'": false,
  "synapse_properties.'synapse.temp_data.chunk.size'": "3072",
  "synapse_properties.'synapse.xpath.func.extensions'": "org.wso2.micro.integrator.mediation.security.vault.xpath.SecureVaultLookupXPathFunctionProvider",
  "synapse_properties.'synapse.debugger.port.command'": "9005",
  "synapse_properties.'synapse.debugger.port.event'": "9006",
  "synapse_properties.'synapse.script.mediator.pool.size'": "15",
  "synapse_properties.'mediation.flow.statistics.enable'": false,
  "synapse_properties.'mediation.flow.statistics.collect.all'": false,
  "synapse_properties.'mediation.flow.statistics.tracer.collect.payloads'": false,
  "synapse_properties.'mediation.flow.statistics.tracer.collect.properties'": false,
  "synapse_properties.'internal.http.api.enabled'": true,
  "synapse_properties.'internal.http.api.port'": "9191",
  "synapse_properties.'internal.https.api.port'": "9154",
  "synapse_properties.'statistics.clean.enable'": true,
  "synapse_properties.'statistics.clean.interval'": "1000",
  "synapse_properties.'inbound.threads.core'": "20",
  "synapse_properties.'inbound.threads.max'": "100",

  "passthru_properties.'http.socket.timeout'": "180000",
  "passthru_properties.'worker_pool_size_core'": "400",
  "passthru_properties.'worker_pool_size_max'": "400",
  "passthru_properties.'worker_pool_queue_length'": "-1",
  "passthru_properties.'io_buffer_size'": "16384",
  "passthru_properties.'http.max.connection.per.host.port'": "32767",
  "passthru_properties.'http.user.agent.preserve'": false,
  "passthru_properties.'http.server.preserve'": true,
  "passthru_properties.'http.connection.disable.keepalive'": false,
  "passthru_properties.'valid.max.message.size.in.bytes'": "81920",

  "transport.http.preserve_http_headers": ["Content-Type"],
  "transport.http.listener.enable": true,
  "transport.http.listener.class": "org.apache.synapse.transport.passthru.PassThroughHttpListener",
  "transport.http.listener.parameter.port": "8280",
  "transport.http.listener.parameter.httpGetProcessor": "org.wso2.micro.integrator.transport.handlers.PassThroughNHttpGetProcessor",
  "transport.https.listener.class": "org.apache.synapse.transport.passthru.PassThroughHttpSSLListener",
  "transport.https.listener.parameter.port": "8243",
  "transport.https.listener.parameter.HttpsProtocols": "TLSv1,TLSv1.1,TLSv1.2",
  "transport.https.listener.parameter.httpGetProcessor": "org.wso2.micro.integrator.transport.handlers.PassThroughNHttpGetProcessor",
  "transport.http.listener.ssl_profile.read_interval": "3600000",
  "transport.http.listener.keystore.file_name": "repository/resources/security/$ref{keystore.tls.file_name}",
  "transport.http.listener.keystore.type": "$ref{keystore.tls.type}",
  "transport.http.listener.keystore.password": "$ref{keystore.tls.password}",
  "transport.http.listener.keystore.key_password": "$ref{keystore.tls.key_password}",
  "transport.http.listener.truststore.file_name": "repository/resources/security/$ref{truststore.file_name}",
  "transport.http.listener.truststore.type": "$ref{truststore.type}",
  "transport.http.listener.truststore.password": "$ref{truststore.password}",

  "transport.http.sender.enable": true,
  "transport.http.sender.class": "org.apache.synapse.transport.passthru.PassThroughHttpSender",
  "transport.http.sender.keystore.file_name": "repository/resources/security/$ref{keystore.tls.file_name}",
  "transport.http.sender.keystore.type": "$ref{keystore.tls.type}",
  "transport.http.sender.keystore.password": "$ref{keystore.tls.password}",
  "transport.http.sender.keystore.key_password": "$ref{keystore.tls.key_password}",
  "transport.http.sender.truststore.file_name": "repository/resources/security/$ref{truststore.file_name}",
  "transport.http.sender.truststore.type": "$ref{truststore.type}",
  "transport.http.sender.truststore.password": "$ref{truststore.password}",
  "transport.http.sender.ssl_profile.read_interval": "600000",

  "transport.https.sender.class": "org.apache.synapse.transport.passthru.PassThroughHttpSSLSender",

  "transport.http.blocking_sender.parameter.cacheHttpClient": true,
  "transport.http.blocking_sender.parameter.Transfer-Encoding": "chunked",
  "transport.http.blocking_sender.parameter.defaultMaxConnectionsPerHost": "200",
  "transport.http.blocking_sender.parameter.OmitSOAP12Action": true,
  "transport.http.blocking_sender.parameter.SO_TIMEOUT": "60000",

  "transport.hl7.listener.enable": false,
  "transport.hl7.sender.enable": false,

  "transport.vfs.listener.enable": false,
  "transport.vfs.listener.keystore.file_name": "repository/resources/security/$ref{keystore.tls.file_name}",
  "transport.vfs.listener.keystore.type": "$ref{keystore.tls.type}",
  "transport.vfs.listener.keystore.password": "$ref{keystore.tls.password}",
  "transport.vfs.listener.keystore.key_password": "$ref{keystore.tls.key_password}",
  "transport.vfs.listener.keystore.alias": "$ref{keystore.tls.alias}",
  "transport.vfs.sender.enable": false,

  "transport.msmq.listener.parameter.'msmq.receiver.host'": "$ref{server.hostname}",

  "transport.mqtt.listener.mqttConFactory.parameter.'mqtt.server.host.name'": "$ref{server.hostname}",

  "message_formatters.form_urlencoded": "org.apache.synapse.commons.formatters.XFormURLEncodedFormatter",
  "message_formatters.multipart_form_data": "org.apache.axis2.transport.http.MultipartFormDataFormatter",
  "message_formatters.application_xml": "org.apache.axis2.transport.http.ApplicationXMLFormatter",
  "message_formatters.text_xml":  "org.apache.axis2.transport.http.SOAPMessageFormatter",
  "message_formatters.soap_xml": "org.apache.axis2.transport.http.SOAPMessageFormatter",
  "message_formatters.text_plain": "org.apache.axis2.format.PlainTextFormatter",
  "message_formatters.application_json": "org.wso2.micro.integrator.core.json.JsonStreamFormatter",
  "message_formatters.json_badgerfish": "org.apache.axis2.json.JSONBadgerfishMessageFormatter",
  "message_formatters.text_javascript": "org.apache.axis2.json.JSONMessageFormatter",
  "message_formatters.octet_stream": "org.wso2.carbon.relay.ExpandingMessageFormatter",
  "message_formatters.application_binary": "org.apache.axis2.format.BinaryFormatter",

  "message_builders.application_xml": "org.apache.axis2.builder.ApplicationXMLBuilder",
  "message_builders.form_urlencoded": "org.apache.synapse.commons.builders.XFormURLEncodedBuilder",
  "message_builders.multipart_form_data": "org.apache.axis2.builder.MultipartFormDataBuilder",
  "message_builders.text_plain": "org.apache.axis2.format.PlainTextBuilder",
  "message_builders.application_json": "org.wso2.micro.integrator.core.json.JsonStreamBuilder",
  "message_builders.json_badgerfish": "org.apache.axis2.json.JSONBadgerfishOMBuilder",
  "message_builders.text_javascript": "org.apache.axis2.json.JSONBuilder",
  "message_builders.octet_stream": "org.wso2.carbon.relay.BinaryRelayBuilder",
  "message_builders.application_binary": "org.apache.axis2.format.BinaryBuilder",

  "keystore.tls.file_name": "wso2carbon.jks",
  "keystore.tls.type": "JKS",
  "keystore.tls.password": "wso2carbon",
  "keystore.tls.alias": "wso2carbon",
  "keystore.tls.key_password": "wso2carbon",
  "truststore.file_name": "client-truststore.jks",
  "truststore.type": "JKS",
  "truststore.password": "wso2carbon",
  "encryption.type": "asymmetric",
  "encryption.algorithm": "AES",
  "encryption.alias": "symmetric.key.value",

  "database.enable_config": true,
  "database.enable_gov": true,

  "system.parameter": {
    "org.wso2.CipherTransformation": "RSA/ECB/OAEPwithSHA1andMGF1Padding",
    "org.wso2.SecureVaultPasswordRegEx": "^[\\S]{5,30}$"
  }
}
